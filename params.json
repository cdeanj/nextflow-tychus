{
  "name": "NF-Tychus",
  "tagline": "",
  "body": "### Overview\r\nSome stuff..\r\n\r\n### What You Need\r\nTo run Tychus, you will need [Nextflow](http://www.nextflow.io/), a DSL workflow framework for running computational pipelines, and [Docker](https://www.docker.com/), a software containerization platform that resolves dependency nightmares for complex workflows such as Tychus. See below for installation instructions.\r\n\r\n### Installation\r\n#### [Nextflow](http://www.nextflow.io/) Installation\r\n```sh\r\n$ curl -fsSL get.nextflow.io | bash\r\n$ ./nextflow\r\n```\r\n\r\n#### [Docker](https://www.docker.com/) Installation\r\n```sh\r\n$ sudo apt-get update\r\n$ sudo apt-get install docker-compose\r\n```\r\n\r\n### Tychus Alignment\r\nSome stuff here..\r\n\r\n### Tychus Assembly\r\nThe goal of our assembly module is to create high quality genome assemblies from short-read bacterial DNA. Because no single assembly will produce the highest quality results, it is often necessary to assemble reads using multiple genome assemblers. However, this is often time-consuming and error-prone. To this end, our assembly module assembles short-reads using four different De-Bruijn graph based assemblers (Abyss, IDBA-UD, SPades, and Velvet). Kmergenie is used to pick the most optimal kmer value to build the DBG graph when necessary. On completion, contigs from each assembly are used to create a hybrid assembly using CISA, which has shown to produce assemblies with higher contiguity and accuracy. Reads can be assembled _de novo_ or with a reference and each assembly is run in parallel for those with access to multi-core machines.\r\n\r\n### Authors and Contributors\r\nImplemented by Chris Dean. Original concept by Zaid Abdo.\r\n\r\nThese people also contributed in the development: Steven Lakin, Noelle Noyes, Pablo Rovira, and Crystal Yang.\r\n\r\n### Dependencies\r\nTychus utilizes a number of open source projects:\r\n- [Nextflow](https://www.nextflow.io/index.html) - Workflow framework\r\n- [Docker](https://www.docker.com/what-docker) - Software containerization platform\r\n- [Trimmomatic](https://github.com/timflutre/trimmomatic) - Read trimmer\r\n- [Bowtie2](https://github.com/BenLangmead/bowtie2) - Sequence aligner\r\n- [Samtools](https://github.com/samtools/samtools) - Alignment processor\r\n- [Freebayes](https://github.com/ekg/freebayes) - Variant caller\r\n- [Coverage Sampler](https://github.com/cdeanj/coverage_sampler) - Rarefaction calculator\r\n- [kSNP3](https://sourceforge.net/projects/ksnp/) - Phylogentic analyses\r\n- [KmerGenie](http://kmergenie.bx.psu.edu/) - Kmer selection for de novo genome assemblies\r\n- [Abyss](https://github.com/bcgsc/abyss) - De novo sequence assembler for short-paired reads\r\n- [SPades](http://spades.bioinf.spbau.ru/release3.9.0/manual.html) - Assembler for single-celled bacterial genomes\r\n- [IDBA-UD](https://github.com/loneknightpy/idba) - Genome assembler for short reads\r\n- [Velvet](https://github.com/dzerbino/velvet) - De novo short-read assembler\r\n- [CISA](http://sb.nhri.org.tw/CISA/en/CISA;jsessionid=125169F363E3D18705C397E7C6F68C8E) - Contig integrator\r\n\r\n### Support or Contact\r\nHaving trouble or have a great idea for an awesome new feature? Submit an issue on Github or contact Chris Dean at cdean11@rams.colostate.edu\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}